{"version":3,"file":"index.js","mappings":"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","sources":["webpack://virtual-keyboard/./src/components/app/App.js","webpack://virtual-keyboard/./src/utils/utils.js","webpack://virtual-keyboard/./src/components/key/Key.js","webpack://virtual-keyboard/./src/components/keyboard/Keyboard.js","webpack://virtual-keyboard/./src/index.js","webpack://virtual-keyboard/./src/components/text-area/Textarea.js"],"sourcesContent":["class App {\n  #app = null;\n\n  constructor() {\n    this.#app = this.#createApp();\n  }\n\n  #createApp() {\n    const APP = document.createElement('div');\n    APP.classList.add('app');\n    document.body.append(APP);\n    return APP;\n  }\n\n  appendNode(node) {\n    this.#app.append(node);\n    return this.#app;\n  }\n}\n\nexport default new App();\n","/* eslint-disable import/prefer-default-export */\nexport const createNode = (element, cls) => {\n  const node = document.createElement(element);\n  node.classList.add(cls);\n  return node;\n};\n\n// export const KEY_CODE = [\n// //  {'Backquote': {eng: '`', ru: 'Ё'}, 'Digit1': {eng: '`', ru: 'Ё'}, 'Digit2':\n// // {eng: '`', ru: 'Ё'}, 'Digit3': {eng: '`', ru: 'Ё'},\n// // 'Digit4': {eng: '`', ru: 'Ё'}, 'Digit5': {eng: '`', ru: 'Ё'}\n// // , 'Digit6': {eng: '`', ru: 'Ё'}, 'Digit7': {eng: '`', ru: 'Ё'}, 'Digit8':\n// //  {eng: '`', ru: 'Ё'}, 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace',},\n//   ['Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash'],\n//   ['CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Enter'],\n//   ['ShiftLeft', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ArrowUp', 'ShiftRight'],\n//   ['ControlLeft', 'MetaLeft', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight'],\n// ];\n","import { createNode } from '../../utils/utils';\n\nclass Key {\n  constructor(code, value) {\n    this.keyCode = code;\n    this.keyValue = value;\n    this.keyNode = this.#createKey();\n    this.mouseClickHandler = this.mouseClickHandler.bind(this);\n    this.clickEvent();\n  }\n\n  #createKey() {\n    const key = createNode('button', 'key');\n    key.innerHTML = `<span class=\"key__inner\">${this.keyValue}</span>`;\n    key.dataset.code = this.keyCode;\n    return key;\n  }\n\n  clickEvent() {\n    this.keyNode.addEventListener('click', this.mouseClickHandler);\n  }\n\n  static keypressEvent() {\n    window.addEventListener('keydown', e => {\n      e.preventDefault();\n      const pressedKey = e.code;\n      const targerKey = document.querySelector(\n        `.key[data-code=\"${pressedKey}\"]`\n      );\n      targerKey.classList.add('key_active');\n      targerKey.click();\n      window.addEventListener('keyup', () => {\n        targerKey.classList.remove('key_active');\n      });\n    });\n  }\n\n  mouseClickHandler() {\n    const textarea = document.querySelector('.textarea');\n    switch (this.keyCode) {\n      case 'Enter':\n        textarea.value += '\\n';\n        break;\n      case 'Tab':\n        textarea.value += '\\t';\n        break;\n      case 'Delete':\n        this.deleteSymbol(textarea);\n        break;\n      case 'Backspace':\n        this.backspaceSymbol(textarea);\n        break;\n      case 'CapsLock':\n        break;\n      case 'ShiftLeft':\n      case 'ShiftRight':\n      case 'AltRight':\n      case 'AltLeft':\n      case 'ControlRight':\n      case 'ControlLeft':\n      case 'MetaLeft':\n        break;\n      default:\n        this.printSymbol(textarea);\n        break;\n    }\n    textarea.focus();\n  }\n\n  deleteSymbol(textarea) {\n    const start = textarea.value.substring(0, textarea.selectionStart);\n    const end = textarea.value\n      .substring(textarea.selectionStart, textarea.value.length)\n      .split('');\n    end.shift();\n\n    textarea.value = start + end.join('');\n    textarea.selectionStart = start.length;\n    textarea.selectionEnd = start.length;\n  }\n\n  backspaceSymbol(textarea) {\n    const start = textarea.value\n      .substring(0, textarea.selectionStart)\n      .split('');\n    const end = textarea.value.substring(\n      textarea.selectionStart,\n      textarea.value.length\n    );\n    start.pop();\n    textarea.value = start.join('') + end;\n    textarea.selectionStart = start.length;\n    textarea.selectionEnd = start.length;\n  }\n\n  printSymbol(textarea, value = this.keyValue) {\n    const startText = textarea.value.substring(0, textarea.selectionStart);\n    const endText = textarea.value.substring(\n      textarea.selectionStart,\n      textarea.value.length\n    );\n    textarea.value = startText + value + endText;\n    textarea.selectionStart = startText.length + 1;\n    textarea.selectionEnd = startText.length + 1;\n  }\n}\n\nexport default Key;\n","import { createNode } from '../../utils/utils';\nimport Key from '../key/Key';\n\nconst KEY_DATA_BY_LINES = [\n  {\n    Backquote: {\n      ru: {\n        upper: 'Ё',\n        lower: 'ё',\n      },\n      eng: {\n        upper: '`',\n        lower: '`',\n      },\n    },\n    Digit1: {\n      ru: {\n        upper: '!',\n        lower: '1',\n      },\n      eng: {\n        upper: '!',\n        lower: '1',\n      },\n    },\n    Digit2: {\n      ru: {\n        upper: '\"',\n        lower: '2',\n      },\n      eng: {\n        upper: '@',\n        lower: '2',\n      },\n    },\n    Digit3: {\n      ru: {\n        upper: '№',\n        lower: '3',\n      },\n      eng: {\n        upper: '#',\n        lower: '3',\n      },\n    },\n    Digit4: {\n      ru: {\n        upper: ';',\n        lower: '4',\n      },\n      eng: {\n        upper: '$',\n        lower: '4',\n      },\n    },\n    Digit5: {\n      ru: {\n        upper: '%',\n        lower: '5',\n      },\n      eng: {\n        upper: '%',\n        lower: '5',\n      },\n    },\n    Digit6: {\n      ru: {\n        upper: ':',\n        lower: '6',\n      },\n      eng: {\n        upper: '^',\n        lower: '6',\n      },\n    },\n    Digit7: {\n      ru: {\n        upper: '?',\n        lower: '7',\n      },\n      eng: {\n        upper: '&',\n        lower: '7',\n      },\n    },\n    Digit8: {\n      ru: {\n        upper: '*',\n        lower: '8',\n      },\n      eng: {\n        upper: '*',\n        lower: '8',\n      },\n    },\n    Digit9: {\n      ru: {\n        upper: '(',\n        lower: '9',\n      },\n      eng: {\n        upper: '(',\n        lower: '9',\n      },\n    },\n    Digit0: {\n      ru: {\n        upper: ')',\n        lower: '0',\n      },\n      eng: {\n        upper: ')',\n        lower: '0',\n      },\n    },\n    Minus: {\n      ru: {\n        upper: '_',\n        lower: '-',\n      },\n      eng: {\n        upper: '_',\n        lower: '-',\n      },\n    },\n    Equal: {\n      ru: {\n        upper: '+',\n        lower: '=',\n      },\n      eng: {\n        upper: '+',\n        lower: '=',\n      },\n    },\n    Backspace: {\n      ru: {\n        upper: 'Backspace',\n        lower: 'Backspace',\n      },\n      eng: {\n        upper: 'Backspace',\n        lower: 'Backspace',\n      },\n    },\n  },\n  {\n    Tab: {\n      ru: {\n        upper: 'Tab',\n        lower: 'Tab',\n      },\n      eng: {\n        upper: 'Tab',\n        lower: 'Tab',\n      },\n    },\n    KeyQ: {\n      ru: {\n        upper: 'Й',\n        lower: 'Й',\n      },\n      eng: {\n        upper: 'Q',\n        lower: 'q',\n      },\n    },\n    KeyW: {\n      ru: {\n        upper: 'Ц',\n        lower: 'ц',\n      },\n      eng: {\n        upper: 'W',\n        lower: 'w',\n      },\n    },\n    KeyE: {\n      ru: {\n        upper: 'У',\n        lower: 'у',\n      },\n      eng: {\n        upper: 'E',\n        lower: 'e',\n      },\n    },\n    KeyR: {\n      ru: {\n        upper: 'К',\n        lower: 'к',\n      },\n      eng: {\n        upper: 'R',\n        lower: 'r',\n      },\n    },\n    KeyT: {\n      ru: {\n        upper: 'Е',\n        lower: 'е',\n      },\n      eng: {\n        upper: 'T',\n        lower: 't',\n      },\n    },\n    KeyY: {\n      ru: {\n        upper: 'Н',\n        lower: 'н',\n      },\n      eng: {\n        upper: 'Y',\n        lower: 'y',\n      },\n    },\n    KeyU: {\n      ru: {\n        upper: 'Г',\n        lower: 'г',\n      },\n      eng: {\n        upper: 'U',\n        lower: 'u',\n      },\n    },\n    KeyI: {\n      ru: {\n        upper: 'Ш',\n        lower: 'ш',\n      },\n      eng: {\n        upper: 'I',\n        lower: 'i',\n      },\n    },\n    KeyO: {\n      ru: {\n        upper: 'Щ',\n        lower: 'щ',\n      },\n      eng: {\n        upper: 'O',\n        lower: 'o',\n      },\n    },\n    KeyP: {\n      ru: {\n        upper: 'З',\n        lower: 'з',\n      },\n      eng: {\n        upper: 'P',\n        lower: 'p',\n      },\n    },\n    BracketLeft: {\n      ru: {\n        upper: 'Х',\n        lower: 'х',\n      },\n      eng: {\n        upper: '{',\n        lower: '[',\n      },\n    },\n    BracketRight: {\n      ru: {\n        upper: 'Ъ',\n        lower: 'ъ',\n      },\n      eng: {\n        upper: '}',\n        lower: ']',\n      },\n    },\n    Backslash: {\n      ru: {\n        upper: '/',\n        lower: '/',\n      },\n      eng: {\n        upper: '\\\\',\n        lower: '\\\\',\n      },\n    },\n    Delete: {\n      ru: {\n        upper: 'Del',\n        lower: 'Del',\n      },\n      eng: {\n        upper: 'Del',\n        lower: 'Del',\n      },\n    },\n  },\n  {\n    CapsLock: {\n      ru: {\n        upper: 'Caps',\n        lower: 'Caps',\n      },\n      eng: {\n        upper: 'Caps',\n        lower: 'Caps',\n      },\n    },\n    KeyA: {\n      ru: {\n        upper: 'Ф',\n        lower: 'ф',\n      },\n      eng: {\n        upper: 'A',\n        lower: 'a',\n      },\n    },\n    KeyS: {\n      ru: {\n        upper: 'Ы',\n        lower: 'ы',\n      },\n      eng: {\n        upper: 'S',\n        lower: 's',\n      },\n    },\n    KeyD: {\n      ru: {\n        upper: 'В',\n        lower: 'в',\n      },\n      eng: {\n        upper: 'D',\n        lower: 'd',\n      },\n    },\n    KeyF: {\n      ru: {\n        upper: 'А',\n        lower: 'а',\n      },\n      eng: {\n        upper: 'F',\n        lower: 'f',\n      },\n    },\n    KeyG: {\n      ru: {\n        upper: 'П',\n        lower: 'п',\n      },\n      eng: {\n        upper: 'G',\n        lower: 'g',\n      },\n    },\n    KeyH: {\n      ru: {\n        upper: 'Р',\n        lower: 'р',\n      },\n      eng: {\n        upper: 'H',\n        lower: 'h',\n      },\n    },\n    KeyJ: {\n      ru: {\n        upper: 'О',\n        lower: 'о',\n      },\n      eng: {\n        upper: 'J',\n        lower: 'j',\n      },\n    },\n    KeyK: {\n      ru: {\n        upper: 'Л',\n        lower: 'л',\n      },\n      eng: {\n        upper: 'K',\n        lower: 'k',\n      },\n    },\n    KeyL: {\n      ru: {\n        upper: 'Д',\n        lower: 'д',\n      },\n      eng: {\n        upper: 'L',\n        lower: 'l',\n      },\n    },\n    Semicolon: {\n      ru: {\n        upper: 'Ж',\n        lower: 'ж',\n      },\n      eng: {\n        upper: ':',\n        lower: ';',\n      },\n    },\n    Quote: {\n      ru: {\n        upper: 'Э',\n        lower: 'э',\n      },\n      eng: {\n        upper: '\"',\n        lower: \"'\",\n      },\n    },\n    Enter: {\n      ru: {\n        upper: 'Enter',\n        lower: 'Enter',\n      },\n      eng: {\n        upper: 'Enter',\n        lower: 'Enter',\n      },\n    },\n  },\n  {\n    ShiftLeft: {\n      ru: {\n        upper: 'Shift',\n        lower: 'Shift',\n      },\n      eng: {\n        upper: 'Shift',\n        lower: 'Shift',\n      },\n    },\n    KeyZ: {\n      ru: {\n        upper: 'Я',\n        lower: 'я',\n      },\n      eng: {\n        upper: 'Z',\n        lower: 'z',\n      },\n    },\n    KeyX: {\n      ru: {\n        upper: 'Ч',\n        lower: 'ч',\n      },\n      eng: {\n        upper: 'X',\n        lower: 'x',\n      },\n    },\n    KeyC: {\n      ru: {\n        upper: 'С',\n        lower: 'с',\n      },\n      eng: {\n        upper: 'C',\n        lower: 'c',\n      },\n    },\n    KeyV: {\n      ru: {\n        upper: 'М',\n        lower: 'м',\n      },\n      eng: {\n        upper: 'V',\n        lower: 'v',\n      },\n    },\n    KeyB: {\n      ru: {\n        upper: 'И',\n        lower: 'и',\n      },\n      eng: {\n        upper: 'B',\n        lower: 'b',\n      },\n    },\n    KeyN: {\n      ru: {\n        upper: 'Т',\n        lower: 'т',\n      },\n      eng: {\n        upper: 'N',\n        lower: 'n',\n      },\n    },\n    KeyM: {\n      ru: {\n        upper: 'Ь',\n        lower: 'ь',\n      },\n      eng: {\n        upper: 'M',\n        lower: 'm',\n      },\n    },\n    Comma: {\n      ru: {\n        upper: 'Б',\n        lower: 'б',\n      },\n      eng: {\n        upper: '<',\n        lower: ',',\n      },\n    },\n    Period: {\n      ru: {\n        upper: 'Ю',\n        lower: 'ю',\n      },\n      eng: {\n        upper: '>',\n        lower: '.',\n      },\n    },\n    Slash: {\n      ru: {\n        upper: ',',\n        lower: '.',\n      },\n      eng: {\n        upper: '?',\n        lower: '/',\n      },\n    },\n    ArrowUp: {\n      ru: {\n        upper: '↑',\n        lower: '↑',\n      },\n      eng: {\n        upper: '↑',\n        lower: '↑',\n      },\n    },\n    ShiftRight: {\n      ru: {\n        upper: 'Shift',\n        lower: 'Shift',\n      },\n      eng: {\n        upper: 'Shift',\n        lower: 'Shift',\n      },\n    },\n  },\n  {\n    ControlLeft: {\n      ru: {\n        upper: 'Ctrl',\n        lower: 'Ctrl',\n      },\n      eng: {\n        upper: 'Ctrl',\n        lower: 'Ctrl',\n      },\n    },\n    MetaLeft: {\n      ru: {\n        upper: 'Win',\n        lower: 'Win',\n      },\n      eng: {\n        upper: 'Win',\n        lower: 'Win',\n      },\n    },\n    AltLeft: {\n      ru: {\n        upper: 'Alt',\n        lower: 'Alt',\n      },\n      eng: {\n        upper: 'Alt',\n        lower: 'Alt',\n      },\n    },\n    Space: {\n      ru: {\n        upper: ' ',\n        lower: ' ',\n      },\n      eng: {\n        upper: ' ',\n        lower: ' ',\n      },\n    },\n    AltRight: {\n      ru: {\n        upper: 'Alt',\n        lower: 'Alt',\n      },\n      eng: {\n        upper: 'Alt',\n        lower: 'Alt',\n      },\n    },\n    ArrowLeft: {\n      ru: {\n        upper: '←',\n        lower: '←',\n      },\n      eng: {\n        upper: '←',\n        lower: '←',\n      },\n    },\n    ArrowDown: {\n      ru: {\n        upper: '↓',\n        lower: '↓',\n      },\n      eng: {\n        upper: '↓',\n        lower: '↓',\n      },\n    },\n    ArrowRight: {\n      ru: {\n        upper: '→',\n        lower: '→',\n      },\n      eng: {\n        upper: '→',\n        lower: '→',\n      },\n    },\n    ControlRight: {\n      ru: {\n        upper: 'Ctrl',\n        lower: 'Ctrl',\n      },\n      eng: {\n        upper: 'Ctrl',\n        lower: 'Ctrl',\n      },\n    },\n  },\n];\n\nclass Keyboard {\n  #lang = localStorage.getItem('lang') || 'eng';\n\n  #case = localStorage.getItem('case') || 'lower';\n\n  #node = null;\n\n  constructor() {\n    this.#saveSettingsinLocalStorage();\n    this.#node = this.#createKeyboardNode('div', 'keyboard');\n    this.changeLanquageHandler();\n    this.changeCaseClickHandler();\n  }\n\n  #createKeyboardNode = createNode;\n\n  #saveSettingsinLocalStorage() {\n    localStorage.setItem('lang', this.#lang);\n    localStorage.setItem('case', this.#case);\n  }\n\n  renderKeyboard() {\n    return this.#node;\n  }\n\n  renderKeys() {\n    KEY_DATA_BY_LINES.forEach(keyLine => {\n      const lineNode = this.#renderKeyboardLine(keyLine);\n      this.#node.append(lineNode);\n    });\n  }\n\n  #renderKeyboardLine(keys) {\n    const lineNode = createNode('div', 'keyboard__line');\n    Object.keys(keys).forEach(key => {\n      const { keyNode } = new Key(key, keys[key][this.#lang][this.#case]);\n      lineNode.append(keyNode);\n    });\n\n    return lineNode;\n  }\n\n  changeLanquageHandler() {\n    window.addEventListener('keydown', e => {\n      const keyPressed = e.key;\n      const secondKeyHandler = event => {\n        const secondPressed = event.key;\n        if (secondPressed === 'Alt') {\n          this.#lang = this.#lang === 'ru' ? 'eng' : 'ru';\n          this.rerender();\n          this.#saveSettingsinLocalStorage();\n        }\n        window.removeEventListener('keydown', secondKeyHandler);\n      };\n      if (keyPressed === 'Shift') {\n        window.addEventListener('keydown', secondKeyHandler);\n      }\n    });\n  }\n\n  changeCaseClickHandler() {\n    window.addEventListener('click', e => {\n      if (e.target.closest('.key[data-code=\"CapsLock\"]')) {\n        this.#case = this.#case === 'upper' ? 'lower' : 'upper';\n        this.rerender();\n        this.#saveSettingsinLocalStorage();\n      }\n    });\n  }\n\n  rerender() {\n    document.querySelector('.keyboard').innerHTML = '';\n    this.renderKeys();\n  }\n}\n\nexport default Keyboard;\n","import App from './components/app/App';\nimport Keyboard from './components/keyboard/Keyboard';\nimport Key from './components/key/Key';\nimport TextArea from './components/text-area/Textarea';\n\nApp.appendNode(TextArea());\nconst keyboard = new Keyboard();\nkeyboard.renderKeys();\nKey.keypressEvent();\n\nApp.appendNode(keyboard.renderKeyboard());\n\ndocument\n  .querySelector('.app')\n  .insertAdjacentHTML(\n    'afterend',\n    '<p class=\"info\">*Клавиатура создана в операционной системе Windows</p><p class=\"info\">*Для переключения языка комбинация:Shift + alt, Нажатие CapsLock включает и выключает UpperCase</p></p>'\n  );\n","import { createNode } from '../../utils/utils';\n\nexport default function TextArea() {\n  const node = createNode('textarea', 'textarea');\n  node.setAttribute('autofocus', true);\n  return node;\n}\n"],"names":["constructor","this","APP","document","createElement","classList","add","body","append","appendNode","node","createNode","element","cls","code","value","keyCode","keyValue","keyNode","mouseClickHandler","bind","clickEvent","key","innerHTML","dataset","addEventListener","static","window","e","preventDefault","pressedKey","targerKey","querySelector","click","remove","textarea","deleteSymbol","backspaceSymbol","printSymbol","focus","start","substring","selectionStart","end","length","split","shift","join","selectionEnd","pop","arguments","undefined","startText","endText","KEY_DATA_BY_LINES","Backquote","ru","upper","lower","eng","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal","Backspace","Tab","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Backslash","Delete","CapsLock","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Enter","ShiftLeft","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","ArrowUp","ShiftRight","ControlLeft","MetaLeft","AltLeft","Space","AltRight","ArrowLeft","ArrowDown","ArrowRight","ControlRight","App","setAttribute","TextArea","keyboard","localStorage","getItem","changeLanquageHandler","changeCaseClickHandler","setItem","renderKeyboard","renderKeys","forEach","keyLine","lineNode","keys","Object","Key","keyPressed","secondKeyHandler","event","rerender","removeEventListener","target","closest","insertAdjacentHTML"],"sourceRoot":""}